@using StartBootstrap.Freelancer.Blazor.Models
@using KenticoCloud.Delivery
@using Microsoft.Extensions.Configuration

@inject HttpClient Http
@inject IConfiguration  Configuration

@if (items == null)
{
    <p><em>Loading ...</em></p>
}
else
{
    @foreach (PortfolioItem item in items)
    {
        <div class="portfolio-modal modal fade" id="@("portfolioModal" + @item.System.Codename)" tabindex="-1" role="dialog" aria-labelledby="@("portfolioModal" + @item.System.Codename + "label")" aria-hidden="true">
            <div class="modal-dialog modal-xl" role="document">
                <div class="modal-content">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">
                            <i class="fas fa-times"></i>
                        </span>
                    </button>
                    <div class="modal-body text-center">
                        <div class="container">
                            <div class="row justify-content-center">
                                <div class="col-lg-8">
                                    <!-- Portfolio Modal - Title -->
                                    <h2 class="portfolio-modal-title text-secondary text-uppercase mb-0">@item.Title</h2>
                                    <!-- Icon Divider -->
                                    <div class="divider-custom">
                                        <div class="divider-custom-line"></div>
                                        <div class="divider-custom-icon">
                                            <i class="fas fa-star"></i>
                                        </div>
                                        <div class="divider-custom-line"></div>
                                    </div>
                                    <!-- Portfolio Modal - Image -->
                                    <img class="img-fluid rounded mb-5" src="@item.Image.FirstOrDefault()?.Url" alt="@item.Image.FirstOrDefault()?.Description">
                                    <!-- Portfolio Modal - Text -->
                                    <p class="mb-5">@item.Text</p>
                                    <button class="btn btn-primary" href="#" data-dismiss="modal">
                                        <i class="fas fa-times fa-fw"></i>
                                        Close Window
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}

@code {
    IEnumerable<PortfolioItem> items;

    protected override async Task OnInitAsync()
    {
        var projectId = Configuration.GetValue<string>("DeliveryOptions:ProjectId");
        var client = DeliveryClientBuilder.WithProjectId(projectId).WithHttpClient(Http).Build();

        items = (await client.GetItemsAsync<PortfolioItem>()).Items;
    }
}
