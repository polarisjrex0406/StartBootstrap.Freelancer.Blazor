@using StartBootstrap.Freelancer.Blazor.Models
@using KenticoCloud.Delivery

@inject HttpClient Http

<section class="page-section portfolio" id="portfolio">
    <div class="container">

        <!-- Portfolio Section Heading -->
        <h2 class="page-section-heading text-center text-uppercase text-secondary mb-0">Portfolio</h2>

        <!-- Icon Divider -->
        <div class="divider-custom">
            <div class="divider-custom-line"></div>
            <div class="divider-custom-icon">
                <i class="fas fa-star"></i>
            </div>
            <div class="divider-custom-line"></div>
        </div>

        <!-- Portfolio Grid Items -->
        <div class="row">
            @if (items == null)
            {
                <p><em>Loading ...</em></p>
            }
            else
            {
                @foreach (PortfolioItem item in items)
                {
                    <!-- Portfolio Item 1 -->
                    <div class="col-md-6 col-lg-4">
                        <div class="portfolio-item mx-auto" data-toggle="modal" data-target="@("#portfolioModal" + @item.System.Codename)">
                            <div class="portfolio-item-caption d-flex align-items-center justify-content-center h-100 w-100">
                                <div class="portfolio-item-caption-content text-center text-white">
                                    <i class="fas fa-plus fa-3x"></i>
                                </div>
                            </div>
                            <img class="img-fluid" src="@item.Image.FirstOrDefault().Url" alt="@item.Image.FirstOrDefault().Description">
                        </div>
                    </div>
                }
            }
        </div>
        <!-- /.row -->

    </div>
</section>

@code {
    IEnumerable<PortfolioItem> items;

    private CustomTypeProvider TypeProvider { get; } = new CustomTypeProvider();

    protected override async Task OnInitAsync()
    {
        var client = DeliveryClientBuilder.WithProjectId("a9b221f5-7375-01af-4d91-67a87cb4e991").WithTypeProvider(TypeProvider).WithHttpClient(Http).Build();

        items = (await client.GetItemsAsync<PortfolioItem>()).Items;
    }
}
